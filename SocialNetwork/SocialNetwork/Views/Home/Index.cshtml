@{
    var guardarData = ViewBag.Guardar as SavePostViewModel;
    ViewData["Title"] = "Publicaciones";
}
@using SocialNetwork.Core.Application.ViewModel.Post
@using System.Linq
@model List<PostViewModel>

<div class="container-fluid my-4">
    <div class="row gy-4">
        <div class="col-12 col-md-6 col-lg-3 mx-auto">
            <div class="card shadow-sm">
                <div class="card-header bg-primary">
                    <h4 class="text-center text-light">Crear publicación</h4>
                </div>
                <div class="card-body d-flex justify-content-center gap-3">
                    <button title="Subir un texto" type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modal1">
                        <i class="fas fa-file-alt"></i>
                    </button>
                    <button title="Subir una imagen" type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#modal2">
                        <i class="fas fa-image"></i>
                    </button>
                    <button title="Subir un video de youtube" type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#modal3">
                        <i class="fas fa-video"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="modal fade" id="modal1" tabindex="-1" aria-labelledby="modalLabel1" aria-hidden="true">
            <div class="modal-dialog rounded-3">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalLabel1">Que tienes en mente...</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                    </div>
                    <div class="modal-body">
                        @Html.Partial("_Formulario", guardarData)
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="modal2" tabindex="-1" aria-labelledby="modalLabel2" aria-hidden="true">
            <div class="modal-dialog rounded-3">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalLabel2">Sube una imagen!</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                    </div>
                    <div class="modal-body">
                        @Html.Partial("_Formulario2", guardarData)
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="modal3" tabindex="-1" aria-labelledby="modalLabel3" aria-hidden="true">
            <div class="modal-dialog rounded-3">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalLabel3">Sube un video!</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                    </div>
                    <div class="modal-body">
                        @Html.Partial("_Formulario3", guardarData)
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12 col-md-6 mx-auto mt-5">
            @functions {
                public void RenderReplies(IEnumerable<SocialNetwork.Core.Application.ViewModel.Comments.CommentViewModel> comments, int parentId, int margin, int postId)
                {
                    var replies = comments.Where(c => c.ParentCommentId == parentId).ToList();
                    foreach (var reply in replies)
                    {
                        <div class="d-flex bg-white gap-3 mb-2 hijos" style="margin-left:@(margin)px;">
                            <div>
                                <img class="rounded-circle border" width="60" height="60" src="@reply.ImagePath" alt="User image" />
                            </div>
                            <div>
                                <p>@reply.Message</p>
                                <div>
                                    @if ((DateTime.Now - reply.Created).TotalMinutes < 60)
                                    {
                                        <span>@Convert.ToInt32((DateTime.Now - reply.Created).TotalMinutes) m</span>
                                    }
                                    else if ((DateTime.Now - reply.Created).TotalHours < 24)
                                    {
                                        <span>@Convert.ToInt32((DateTime.Now - reply.Created).TotalHours) h</span>
                                    }
                                    else
                                    {
                                        <span>@Convert.ToInt32((DateTime.Now - reply.Created).TotalDays) d</span>
                                    }
                                </div>
                                <button type="button" class="btn btn-link text-primary reply-button"
                                data-comment-id="@reply.Id"
                                data-post-id="@postId"
                                data-bs-toggle="modal"
                                data-bs-target="#replyModal">
                                    Responder
                                </button>
                            </div>
                        </div>
                        RenderReplies(comments, reply.Id, margin + 30, postId);
                    }
                }
            }

            @foreach (var post in Model)
            {
                <div class="post bg-light p-3 mb-4 rounded-3 shadow-sm">
                    <div class="post-header d-flex align-items-center">
                        <img class="rounded-circle border" width="60" height="60" src="@post.UserImagePath" alt="User image" />
                        <div class="ms-3">
                            <h5 class="mb-0">@post.Username</h5>
                            <small class="text-muted">@post.Date.ToString("g")</small>
                        </div>
                    </div>

                    <div class="post-content mt-3">
                        @if (!string.IsNullOrEmpty(post.ImagePath))
                        {
                            <img class="img-fluid rounded-3 border" src="@post.ImagePath" alt="Post image" />
                        }
                        @if (!string.IsNullOrEmpty(post.VideoUrl))
                        {
                            string[] slides = post.VideoUrl.Split('=');
                            
                            <div class="video-container mt-2">
                                <iframe class="w-100" style="height:300px;" src=@($"https://www.youtube.com/embed/{slides.LastOrDefault()}") frameborder="0" allowfullscreen></iframe>
                            </div>
                        }
                        @if(!string.IsNullOrWhiteSpace(post.Content))
                        {
                            <span class="text-muted ms-2">@post.Username </span>
                            <p class="fs-5 d-inline ms-2 fw-bold">@post.Content</p>
                        }
                    </div>

                    <div class="mt-3">
                        <button class="btn btn-sm btn-secondary"
                                type="button"
                                data-bs-toggle="collapse"
                                data-bs-target="#comments-@post.Id"
                                aria-expanded="false"
                                aria-controls="comments-@post.Id">
                            Comentarios
                            <i class="fas fa-comments"></i>
                        </button>
                        <a asp-action="Edit" asp-controller="Home" asp-route-postId="@post.Id" class="btn btn-sm btn-warning text-black">
                            Editar
                            <i class="fas fa-pencil-alt"></i>
                        </a>
                        <a class="btn btn-sm btn-danger text-white" asp-action="DeletePost" asp-controller="Home" asp-route-postId="@post.Id"> 
                            <i class="fas fa-trash"></i>
                        </a>
                    </div>

                    <div class="collapse post-comments mt-3" id="comments-@post.Id">
                        <label class="form-label fw-bold">Comentarios</label>
                        @if (post.Comments != null && post.Comments.Any())
                        {
                            var mainComments = post.Comments.Where(c => c.ParentCommentId == null);
                            foreach (var comment in mainComments)
                            {
                                <div class="d-flex bg-white gap-3 mb-2 p-2 rounded-3">
                                    <div>
                                        <img class="rounded-circle border" width="60" height="60" src="@comment.ImagePath" alt="User image" />
                                    </div>
                                    <div>
                                        <p>@comment.Message</p>
                                        <div>
                                            @if ((DateTime.Now - comment.Created).TotalMinutes < 60)
                                            {
                                                <span>@Convert.ToInt32((DateTime.Now - comment.Created).TotalMinutes) m</span>
                                            }
                                            else if ((DateTime.Now - comment.Created).TotalHours < 24)
                                            {
                                                <span>@Convert.ToInt32((DateTime.Now - comment.Created).TotalHours) h</span>
                                            }
                                            else
                                            {
                                                <span>@Convert.ToInt32((DateTime.Now - comment.Created).TotalDays) d</span>
                                            }
                                        </div>
                                        <button type="button" class="btn btn-link text-primary reply-button"
                                                data-comment-id="@comment.Id"
                                                data-post-id="@post.Id"
                                                data-bs-toggle="modal"
                                                data-bs-target="#replyModal">
                                            Responder
                                        </button>
                                    </div>
                                </div>

                                RenderReplies(post.Comments, comment.Id, 30, post.Id);

                            }
                        }
                        else
                        {
                            <p class="text-muted">No hay comentarios.</p>
                        }

                        <div class="mt-4">
                            <form asp-action="CreateComments" asp-controller="Home" method="post">
                                <div class="mb-3">
                                    <label for="NewCommentText-@post.Id" class="form-label fw-bold">Nuevo comentario</label>
                                    <textarea class="form-control" id="NewCommentText-@post.Id" name="CommentText" rows="2"></textarea>
                                    <input type="hidden" name="PostId" value="@post.Id" />
                                    <input type="hidden" name="ParentCommentId" value="" />
                                    <input type="hidden" name="Type" value="@Convert.ToInt32(SocialNetwork.Core.Application.Enums.CommentType.Post)"/>
                                </div>
                                <button type="submit" class="btn btn-primary btn-sm">Comentar</button>
                            </form>
                        </div>
                    </div>
                </div>
            }

            <div class="modal fade" id="replyModal" tabindex="-1" aria-labelledby="replyModalLabel" aria-hidden="true">
                <div class="modal-dialog rounded-3">
                    <div class="modal-content">
                        <form asp-action="CreateComments" asp-controller="Home" method="post">
                            <div class="modal-header">
                                <h5 class="modal-title" id="replyModalLabel">Responder Comentario</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                            </div>
                            <div class="modal-body">
                                <div class="mb-3">
                                    <label for="CommentText" class="form-label fw-bold">Comentario</label>
                                    <input required type="text" class="form-control" id="CommentText" name="CommentText" />
                                    <input type="hidden" id="PostId" name="PostId" value="" />
                                    <input type="hidden" id="ParentCommentId" name="ParentCommentId" value="" />
                                    <input type="hidden" name="Type" value="@Convert.ToInt32(SocialNetwork.Core.Application.Enums.CommentType.Post)" />
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="submit" class="btn btn-primary btn-sm">Enviar</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<style>
    .hijos {
        margin-left: 5rem;
    }
    .video-container iframe {
        border-radius: 0.5rem;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const replyButtons = document.querySelectorAll('.reply-button');
            replyButtons.forEach(function (button) {
                button.addEventListener('click', function () {
                    const commentId = this.getAttribute('data-comment-id');
                    const postId = this.getAttribute('data-post-id');
                    document.getElementById('ParentCommentId').value = commentId;
                    document.getElementById('PostId').value = postId;
                    document.getElementById('CommentText').value = "";
                });
            });
        });
    </script>
}
